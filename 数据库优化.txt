数据库优化：
1、MySQL体系架构:
	● Management Service（管理工具和服务）： 备份恢复、MySQL复制、集群等
	● SQL Interface： 【SQL语句，存储过程、视图】，接收或存储sql语句
	● Parser：sql解析器，1、将sql语句解析成数据结构 2、解析分解构成中出一线的错误，说明该sql语句不合理
	● Optimizer：【调优器、优化器】，优化sql语句查询的过程（选取==>投影==>联接）
		eg:select user_name, age from tableNmae where user_id = '1'
		选取：使用where条件选取相应数据，而不是查询全部数据后选取
		投影：根据user_name,age字段进行投影，而不是将所有属性去出来后进行过滤
		联接：将上两个条件联接起来查询生成最终结果
	● Cache & Buffers: 有两种缓存方式：
		1:sql语句的Parser解析缓存，相同的sql语句只解析一次【select * from table where user_id = ?】
		2:sql查询数据结果缓存【不推荐打开查询缓存，因为限制了数据查询的实时性，当数据库数据改变是，使用相同的sql查询数据，数据可能会未实时改变】
	● MySQL存储引擎：常见的存储引擎有 Innodb、MyISAM

2、Innodb、MyISAM区别：
	INNODB: 在INNODB中表被称为 索引组织表（index organized table），默认聚集索引【如果没有主键，则会选择一个唯一的并且非空索引替代，如果没有这样的索引，InnoDB则会为每一行生成一个6字节的ROWID作为隐藏主键】，这种方式给予了 InnoDB 按主键检索的超高性能
	MyISAM: 使用非聚集索引（辅助索引），与通常的添加索引的方式差不多【默认会把索引读入内存，直接在内存中操作】
	1、INNODB创建表时会创建两个文件【表名.frm表定义文件sql】【表名.ibd 表的数据和索引数据】
	  MyISAM创建表时会创建三个文件【表名.frm表定义文件sql】【表名.MYD 表的数据文件】【表名.MYI 数据库表索引文件】
	2、Innodb不支持全文索引，而MyISAM支持全文索引，查询效率上MyISAM要高
	3、INNODB支持事务、强一致性、数据量小、高并发、实时性强、安全性高【交易系统、支付系统】
	  MyISAM弱一致性、不支持事务、读多写少、数据量大、实时性不高【数据仓库、AI、机器学习】
	4、InnoDB不保存表的具体行数，执行select count(*) from table时需要全表扫描，而MyISAM用一个变量保存了整个表的行数，执行上述语句时只需要读出该变量即可，速度很快
	5、Innodb不支持全文索引，而MyISAM支持全文索引，查询效率上MyISAM要高

3、数据库索引
	索引加速了表的查询效率，使sql语句得到高效运行，使查询数据时为有序查询结构（创建索引时存储引擎以B+树的形式创建地址，顺序以值得大小排序，使得索引查询时是有序查询），有序查询提高查询效率，无需全表扫描查询


4、Hash索引原理： Hash表的结构是由13个元素组成一个数组，在创建索引时首先计算（计算方式：将数值整数化跟数组长度取余  100 % 13）该值在13个哪个数组索引下，在同一个哪个索引下的数据通过比大小的方式进行排序，同一个数组索引下的索引以链表的形式串联


5、B树、B+树结构
	1、B+树的最末端叶子节点包含所有的元素，B树是正课树包含所有的元素
	2、B+树只需遍历最末端叶子节点链表，B树却需要重复地中序遍历


6、MySQL聚集索引（聚簇索引）（索引组织表）
	如果没有主键，则会选择一个唯一的并且非空索引替代，如果没有这样的索引，InnoDB则会为每一行生成一个6字节的ROWID作为隐藏主键
	MySQL的INNODB存储引擎创表时对主键进行创建索引（聚簇索引），将每一个主键上的行数据都封装到B+树的叶子节点上，以主键查询时直接通过索引查询到相应的行数据，每一个子节点是MySQL的页数据（16KB）
	INNODB可以存储的数据行数：高效的索引组织表要求B+树的深度不大于3（每次索引IO只需要3次），计算三层B+树
		第一层可存储1024页数据，16K = 131072 bit,关键字（值）为64bit的整型，关键字指向下一层的页指针为64bit，每一层可存储131072 / 128 = 1024页指向下一层的数据。
		第二层可存储1024*1024 = 1048576页：该层的一个子节点存储1024个（页）指向下一层的数据，上一次有1024个数据指向该层
		第三层可存储大约16777216行数据，假设一行数据大小为1KB，一页的大小为16KB，所以一页可存储16行数据，大约有1048576页，所以1048576 * 16 = 16777216行
	理论行数是一千多万，实际工作中INNODB数据表不要超过500万行

7、INNODB辅助索引：在innodb中除了聚集索引以外的创建的索引叫辅助索引
	特点： 
		1、辅助索引的索引值是主键，不是表记录的地址
		2、使用INNODB辅助索引查询时需要进行两次索引查询，先读取辅助索引，再读取聚簇索引
		3、MyISAM 的辅助索引的索引值是地址

7、聚集索引性能优化：
	1、INNODB表的主键为自增主键，顺序递增的主键，索引一般而言是追加的操作
	2、不推荐使用UUID、随机数作为主键，乱序的主键索引要分裂节点，移动最末端叶子节点内的元素
	3、不推荐使用多列的组合主键，组合主键会增加所有的稀疏度，增加磁盘的存储


7、非聚集索引
	MyISAM存储引擎在创表时的创建主键索引模式，子节点上存储的是数据地址，因为MyISAM的表行数据和索引是分库存储的（索引文件、数据文件），使用非聚簇索引存储结构的表叫堆表
	优点：
		1、表的写入速度非常快，采用无序追加的方式写数据
		2、表的记录可以容纳更多，三层非聚簇索引B+树可容纳1024三次方行数据





